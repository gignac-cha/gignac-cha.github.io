{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["library","add","fas","far","fab","ALGORITHMS","key","text","MARGIN","PADDING","WIDTH","App","props","renders","algorithms","active","state","algorithm","className","classnames","onClick","onClicks","data-algorithm","disabled","numbers","ref","e","refSvg","width","height","map","number","i","maximum","lineX","lineY","color","bubble","a","index","alpha","delta","b","completed","x1","y1","x2","y2","stroke","strokeWidth","count","currentTarget","dataset","setState","generate","_","toInteger","chain","range","random","value","max","minimum","min","sort","sortStart","sorting","setTimeout","shuffle","stopSort","defaults","cloneDeep","resetSort","onChanges","speed","toNumber","setSize","$","step","j","n","self","next","length","selectA","selectB","compare","swap","this","on","entries","k","v","fromPairs","icon","faPlusCircle","type","onChange","faPause","faPlay","faStop","faRandom","faRedo","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.10669548.chunk.js","sourcesContent":["import React from 'react';\n\nimport $ from 'jquery';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport classnames from 'classnames';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { far } from '@fortawesome/free-regular-svg-icons';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n// Add all icons to the library so you can use it in your page\nlibrary.add(fas, far, fab);\n\n\nconst ALGORITHMS = [\n  { key: 'bubble', text: 'Bubble Sort' },\n  { key: 'insertion', text: 'Insertion Sort' },\n  { key: 'selection', text: 'Selection Sort' },\n  { key: 'merge', text: 'Merge Sort' },\n  { key: 'heap', text: 'Heap Sort' },\n  { key: 'quick', text: 'Quick Sort' },\n  { key: 'radix', text: 'Radix Sort' },\n  { key: 'tim', text: 'Tim Sort' },\n];\nconst MARGIN = 10;\nconst PADDING = 5;\nconst WIDTH = 10;\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: 0,\n      height: 0,\n      algorithm: '',\n      numbers: [],\n      maximum: 0,\n      minimum: 0,\n      sortStart: false,\n      sorting: false,\n      speed: 10,\n      defaults: {\n        bubble: {\n          a: { index: -1, alpha: 0, delta: 0 },\n          b: { index: -1, alpha: 0, delta: 0 },\n          completed: -1,\n          count: 0,\n        },\n      },\n    };\n  }\n  componentDidMount() {\n    this.setSize(this.refSvg);\n    $(this.refSvg).on('resize', e => this.setSize(e));\n\n    const { defaults } = this.state;\n    this.setState(_.chain(defaults).entries().map(([ k, v ]) => [ k, _.cloneDeep(v) ]).fromPairs().value());\n  }\n  render() {\n    const { algorithm, numbers, sortStart, sorting, speed } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row mt-4\">\n          {ALGORITHMS.map(this.renders.algorithms)}\n        </div>\n        <div className=\"row mt-4\">\n          <div className=\"col col-2\">\n            <button className=\"btn btn-primary form-control\" onClick={this.onClicks.generate} disabled={algorithm.length === 0 || sortStart}>\n              <FontAwesomeIcon icon={fas.faPlusCircle} /> Generate Data\n            </button>\n          </div>\n          <div className=\"col col-2\">\n            <input type=\"range\" className=\"form-control custom-range\" min={1} max={100} step={1} value={speed} onChange={this.onChanges.speed} />\n          </div>\n        </div>\n        <div className=\"row mt-4\">\n          <div className=\"col col-2\">\n            {this.state.sorting ? (\n            <button className=\"btn btn-warning form-control\" onClick={this.onClicks.sort} disabled={algorithm.length === 0 || numbers.length === 0}>\n              <FontAwesomeIcon icon={fas.faPause} /> Pause\n            </button>\n            ) : (\n            <button className=\"btn btn-success form-control\" onClick={this.onClicks.sort} disabled={algorithm.length === 0 || numbers.length === 0}>\n              <FontAwesomeIcon icon={fas.faPlay} /> Start\n            </button>\n            )}\n          </div>\n          <div className=\"col col-2\">\n            <button className=\"btn btn-danger form-control\" onClick={this.onClicks.stopSort} disabled={!sortStart || numbers.length === 0}>\n              <FontAwesomeIcon icon={fas.faStop} /> Stop\n            </button>\n          </div>\n          <div className=\"col col-2\">\n            <button className=\"btn btn-secondary form-control\" onClick={this.onClicks.shuffle} disabled={sortStart}>\n              <FontAwesomeIcon icon={fas.faRandom} /> Shuffle\n            </button>\n          </div>\n          <div className=\"col col-2\">\n            <button className=\"btn btn-dark form-control\" onClick={this.onClicks.resetSort} disabled={sorting}>\n              <FontAwesomeIcon icon={fas.faRedo} /> Reset\n            </button>\n          </div>\n        </div>\n        <div className=\"row mt-4\">\n          <div className=\"col col-12\">{this.renders.count()}</div>\n          <div className=\"col col-12\">{this.renders.numbers()}</div>\n        </div>\n        <div className=\"row mt-4\">\n          <div className=\"col col-12\">\n\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renders = {\n    algorithms: ({ key, text }) => {\n      const active = key === this.state.algorithm;\n      const className = classnames(\n        'form-control',\n        'mt-2',\n        {\n          'border-primary': active,\n        },\n      );\n      return (\n        <div key={key} className=\"col col-2\">\n          <button className={className} onClick={this.onClicks.algorithm} data-algorithm={key} disabled={active}>{text}</button>\n        </div>\n      );\n    },\n    numbers: () => <svg ref={e => this.refSvg = e} width={'100%'} height={200}>{this.state.numbers.map(this.renders.number)}</svg>,\n    number: (number, i) => {\n      const { maximum, algorithm } = this.state;\n      let lineX = MARGIN + (i + 1) * WIDTH + i * PADDING;\n      const lineY = MARGIN + maximum - number;\n      let color = '#bbb';\n      if (algorithm === 'bubble') {\n        const { bubble } = this.state;\n        if (i === bubble.a.index) {\n          color = `rgba(0, 127, 0, ${bubble.a.alpha / 256})`;\n          lineX += bubble.a.delta * (WIDTH + PADDING);\n        } else if (i === bubble.b.index) {\n          color = `rgba(0, 0, 255, ${bubble.b.alpha / 256})`;\n          lineX += bubble.b.delta * (WIDTH + PADDING);\n        } else if (bubble.completed >= 0 && i >= bubble.completed) {\n          color = '#333';\n        }\n      }\n      return <line key={i} x1={lineX} y1={lineY} x2={lineX} y2={110} stroke={color} strokeWidth={WIDTH}></line>\n    },\n    count: () => {\n      const { algorithm } = this.state;\n      if (algorithm === 'bubble') {\n        return <pre>Swap Count: {this.state[algorithm].count}</pre>\n      }\n    },\n  }\n\n  onClicks = {\n    algorithm: e => {\n      const { algorithm } = e.currentTarget.dataset;\n      this.setState({ algorithm });\n    },\n    generate: e => {\n      const { width } = this.state;\n      const count = _.toInteger((width - MARGIN * 2 - WIDTH) / (PADDING + WIDTH) + 1);\n      const numbers = _.chain(_.range(count)).map(i => _.random(1, 100)).value();\n      const maximum = _.max(numbers);\n      const minimum = _.min(numbers);\n      this.setState({ numbers, maximum, minimum });\n    },\n    sort: e => {\n      const { algorithm, sortStart, sorting } = this.state;\n      if (sortStart) {\n        this.setState({ sorting: !sorting });\n      } else {\n        this.setState({ sortStart: true, sorting: true });\n        setTimeout(this.algorithms[algorithm], 0, 'initialize');\n      }\n    },\n    shuffle: e => {\n      const numbers = _.shuffle(this.state.numbers);\n      this.setState({ numbers });\n    },\n    stopSort: e => {\n      const { algorithm, defaults } = this.state;\n      this.setState({ sortStart: false, sorting: false, [ algorithm ]: _.cloneDeep(defaults[algorithm]) });\n    },\n    resetSort: e => {\n      this.setState({ algorithm: '', numbers: [], sortStart: false, sorting: false });\n    },\n  }\n  onChanges = {\n    speed: e => {\n      const speed = _.toNumber(e.currentTarget.value);\n      this.setState({ speed });\n    },\n  }\n\n  setSize = e => {\n    const width = $(e).width();\n    const height = $(e).height();\n    this.setState({ width, height });\n  }\n  algorithms = {\n    bubble: (step, i, j, n, count) => {\n      const { algorithm, numbers, sorting, bubble } = this.state;\n      const self = this.algorithms[algorithm];\n\n      const selectA = (i, count) => {\n        if (this.state.sorting) {\n        // console.log(algorithm, 'selectA', i, count)\n        if (count < 0xff) {\n          bubble.a.alpha = count;\n          setTimeout(selectA, 1000 / 60, i, count + 0xff * (this.state.speed / 100));\n        } else {\n          bubble.a.alpha = 0xff;\n          setTimeout(self, 0, 'select-b', i, j, n);\n        }\n        this.setState({ bubble });\n        } else if (this.state.sortStart) {\n          setTimeout(selectA, 1000 / 60, i, count);\n        }\n      };\n      const selectB = (j, count) => {\n        if (this.state.sorting) {\n        // console.log(algorithm, 'selectB', j, count)\n        if (count < 0xff) {\n          bubble.b.alpha = count;\n          setTimeout(selectB, 1000 / 60, j, count + 0xff * (this.state.speed / 100));\n        } else {\n          bubble.b.alpha = 0xff;\n          setTimeout(self, 0, 'compare', i, j, n);\n        }\n        this.setState({ bubble });\n        } else if (this.state.sortStart) {\n          setTimeout(selectB, 1000 / 60, j, count);\n        }\n      };\n      const compare = (i, j) => {\n        if (this.state.sorting) {\n        // console.log(algorithm, 'compare', i, j, numbers[i], numbers[j])\n        if (numbers[i] > numbers[j]) {\n          setTimeout(self, 0, 'swap', i, j, n);\n        } else {\n          setTimeout(self, 0, 'next', i, j, n);\n        }\n        } else if (this.state.sortStart) {\n          setTimeout(compare, 1000 / 60, i, j);\n        }\n      };\n      const swap = (i, j, count) => {\n        if (this.state.sorting) {\n        // console.log(algorithm, 'swap', i, j, count)\n        if (count < 100) {\n          bubble.a.delta = (j - i) / 100 * count;\n          bubble.b.delta = -bubble.a.delta;\n          setTimeout(swap, 1000 / 60, i, j, count + 100 * (this.state.speed / 100));\n        } else {\n          bubble.a.index = j;\n          bubble.b.index = i;\n          bubble.a.delta = 0;\n          bubble.b.delta = 0;\n          bubble.count++;\n          [ numbers[i], numbers[j] ] = [ numbers[j], numbers[i] ];\n          setTimeout(self, 0, 'next', i, j, n);\n        }\n        this.setState({ numbers, bubble });\n        } else if (this.state.sortStart) {\n          setTimeout(swap, 1000 / 60, i, j, count);\n        }\n      };\n      const next = (i, j, n) => {\n        if (this.state.sorting) {\n        // console.log(algorithm, 'next', i, j, n)\n        setTimeout(self, 0, 'select-a', i, j, n);\n        } else if (this.state.sortStart) {\n          setTimeout(next, 1000 / 60, i, j, n);\n        }\n      };\n\n      if (sorting) {\n        if (step === 'initialize') {\n          // console.log(algorithm, step)\n          bubble.completed = numbers.length;\n          bubble.count = 0;\n          setTimeout(self, 0, 'select-a', 0, 1, bubble.completed);\n        } else if (step === 'select-a') {\n          // console.log(algorithm, step, i, j, n)\n          bubble.a.index = i;\n          setTimeout(selectA, 0, i, 0);\n        } else if (step === 'select-b') {\n          // console.log(algorithm, step, i, j, n)\n          bubble.b.index = j;\n          setTimeout(selectB, 0, j, 0);\n        } else if (step === 'compare') {\n          // console.log(algorithm, step, i, j, n)\n          setTimeout(compare, 0, i, j);\n        } else if (step === 'swap') {\n          // console.log(algorithm, step, i, j, n)\n          setTimeout(swap, 0, i, j, 0);\n        } else if (step === 'next') {\n          // console.log(algorithm, step, i, j, n)\n          bubble.a.index = -1;\n          bubble.b.index = -1;\n          bubble.a.delta = 0;\n          bubble.b.delta = 0;\n          if (j + 1 === n) {\n            bubble.completed = n - 1;\n            setTimeout(next, 0, 0, 1, bubble.completed);\n          } else if (n > 1) {\n            setTimeout(next, 0, i + 1, j + 1, bubble.completed);\n          } else {\n            bubble.completed = 0;\n            this.setState({ sortStart: false, sorting: false });\n          }\n        }\n      } else {\n        setTimeout(self, 1000 / 60, step, i, j, n);\n      }\n      this.setState({ bubble });\n    },\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}